- table:
    schema: logs
    name: guild_settings
  array_relationships:
  - name: moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  insert_permissions:
  - role: user
    permission:
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
      - guild_id
      - guild_log_channel_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - guild_log_channel_id
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - guild_log_channel_id
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: logs
    name: messages
  array_relationships:
  - name: guild_moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  select_permissions:
  - role: user
    permission:
      columns:
      - id
      - channel_id
      - guild_id
      - author_id
      - content
      - type
      - flags
      - embeds
      - attachments
      - created_at
      - updated_at
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: moderation
    name: cases
  object_relationships:
  - name: target
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: connections
        column_mapping:
          target_id: id
  array_relationships:
  - name: guild_moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  select_permissions:
  - role: user
    permission:
      columns:
      - action
      - action_expiration
      - action_processed
      - case_id
      - context_message_id
      - created_at
      - guild_id
      - log_message_id
      - mod_id
      - mod_tag
      - reason
      - ref_id
      - role_id
      - target_id
      - target_tag
      filter:
        _or:
        - target:
            user_id:
              _eq: X-Hasura-User-Id
        - guild_moderators:
            user_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - action_expiration
      - context_message_id
      - mod_id
      - mod_tag
      - reason
      - ref_id
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      check:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
  event_triggers:
  - name: mod_log
    definition:
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns:
        - role_id
        - created_at
        - action
        - case_id
        - action_expiration
        - ref_id
        - guild_id
        - context_message_id
        - log_message_id
        - mod_id
        - target_id
        - reason
        - mod_tag
        - target_tag
        - action_processed
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook: http://api:3500/api/hasura/hooks/mod_log
- table:
    schema: moderation
    name: guild_settings
  array_relationships:
  - name: moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  insert_permissions:
  - role: user
    permission:
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
      - guild_id
      - mod_log_channel_id
      - mod_role_id
      - member_log_channel_id
      - mute_role_id
      - tag_role_id
      - embed_role_id
      - emoji_role_id
      - reaction_role_id
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - embed_role_id
      - emoji_role_id
      - member_log_channel_id
      - mod_log_channel_id
      - mod_role_id
      - mute_role_id
      - reaction_role_id
      - tag_role_id
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - embed_role_id
      - emoji_role_id
      - member_log_channel_id
      - mod_log_channel_id
      - mod_role_id
      - mute_role_id
      - reaction_role_id
      - tag_role_id
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: moderation
    name: lockdowns
  array_relationships:
  - name: guild_moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - channel_id
      - expiration
      - mod_id
      - mod_tag
      - reason
      - overwrites
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: moderation
    name: role_states
  array_relationships:
  - name: guild_moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - member_id
      - roles
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: organizational
    name: tags
  array_relationships:
  - name: guild_moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  insert_permissions:
  - role: user
    permission:
      check:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
      - aliases
      - content
      - created_at
      - guild_id
      - last_modified
      - name
      - updated_at
      - user_id
      - uses
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - aliases
      - uses
      - content
      - name
      - created_at
      - updated_at
      - guild_id
      - user_id
      - last_modified
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - aliases
      - content
      - last_modified
      - name
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
      check:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
  delete_permissions:
  - role: user
    permission:
      filter:
        guild_moderators:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: connections
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  select_permissions:
  - role: user
    permission:
      columns:
      - avatar
      - id
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: public
    name: guild_moderators
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
- table:
    schema: public
    name: guild_settings
  array_relationships:
  - name: moderators
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: guild_moderators
        column_mapping:
          guild_id: guild_id
  insert_permissions:
  - role: user
    permission:
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
      - guild_id
      - prefix
      - locale
      - modules
      - repository_aliases
      backend_only: false
  select_permissions:
  - role: user
    permission:
      columns:
      - guild_id
      - locale
      - modules
      - prefix
      - repository_aliases
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: user
    permission:
      columns:
      - locale
      - modules
      - prefix
      - repository_aliases
      filter:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
      check:
        moderators:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: public
    name: users
  array_relationships:
  - name: connections
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: connections
  - name: guild_moderators
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: guild_moderators
  select_permissions:
  - role: user
    permission:
      columns:
      - email
      - id
      - username
      filter:
        id:
          _eq: X-Hasura-User-Id
